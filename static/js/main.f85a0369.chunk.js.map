{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","board","score","gameOver","message","i","row","j","push","this","setRandom","setState","emptyGrids","getEmptyGrids","randomCoordinate","Math","floor","random","length","randomNumber","getStartingNum","col","startingNumbers","previous","updated","JSON","stringify","direction","movedLeft","strikeLeft","isChangeinBoard","leftWithRandom","isGameOver","checkForGameWon","movedRight","strikeRight","rightWithRandom","movedUp","strikeUp","upWithRandom","movedDown","strikeDown","downWithRandom","inputBoard","r","c","current","unshift","rotatedRight","rotateToRight","rotateToLeft","result","includes","createBoard","document","querySelector","addEventListener","controlArrowKeys","bind","e","keyCode","strike","className","onClick","map","key","React","Component","Row","cell","cellValue","Cell","value","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uOAGMA,G,kBACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,MAAO,KACPC,MAAO,EACPC,UAAU,EACVC,QAAS,MAPM,E,2EAejB,IAFA,IAAIH,EAAQ,GAEHI,EAAI,EAAGA,EADN,EACaA,IAAK,CAE1B,IADA,IAAMC,EAAM,GACHC,EAAI,EAAGA,EAHR,EAGeA,IACrBD,EAAIE,KAAK,GAEXP,EAAMO,KAAKF,GAEbL,EAAQQ,KAAKC,UAAUD,KAAKC,UAAUT,IACtCQ,KAAKE,SAAS,CAAEV,QAAOC,MAAO,EAAGC,UAAU,EAAOC,QAAS,S,gCAGnDH,GACR,IAAMW,EAAaH,KAAKI,cAAcZ,GAChCa,EAAmBF,EAAWG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWM,SACpEC,EAAeV,KAAKW,iBAE1B,OADAnB,EAAMa,EAAiB,IAAIA,EAAiB,IAAMK,EAC3ClB,I,oCAGKA,GAEZ,IADA,IAAMW,EAAa,GACVN,EAAM,EAAGA,EAAML,EAAMiB,OAAQZ,IACpC,IAAK,IAAIe,EAAM,EAAGA,EAAMpB,EAAMK,GAAKY,OAAQG,IACjB,IAApBpB,EAAMK,GAAKe,IAAcT,EAAWJ,KAAK,CAACF,EAAKe,IAGvD,OAAOT,I,uCAIP,IAAMU,EAAkB,CAAC,EAAG,GAE5B,OADqBA,EAAgBP,KAAKC,MAAMD,KAAKE,SAAWK,EAAgBJ,W,sCAIlEK,EAAUC,GACxB,OAAQC,KAAKC,UAAUF,KAAaC,KAAKC,UAAUH,K,sCAGrCtB,GACd,IAAK,IAAIK,EAAM,EAAGA,EAAML,EAAMiB,OAAQZ,IACpC,IAAK,IAAIe,EAAM,EAAGA,EAAMpB,EAAMK,GAAKY,OAAQG,IACjB,OAApBpB,EAAMK,GAAKe,IACbZ,KAAKE,SAAS,CAAER,UAAU,EAAMC,QAAS,e,6BAM1CuB,GACL,IAAKlB,KAAKT,MAAMG,SACd,GAAkB,SAAdwB,EAAsB,CACxB,IAAMC,EAAYnB,KAAKoB,WAAWpB,KAAKT,MAAMC,OAC7C,GAAIQ,KAAKqB,gBAAgBrB,KAAKT,MAAMC,MAAO2B,EAAU3B,OAAQ,CAC3D,IAAM8B,EAAiBtB,KAAKC,UAAUkB,EAAU3B,OAE5CQ,KAAKuB,WAAWD,GAClBtB,KAAKE,SAAS,CAAEV,MAAO8B,EAAgB5B,UAAU,EAAMC,QAAS,eAEzDK,KAAKwB,gBAAgBF,GAC5BtB,KAAKE,SAAS,CAAER,UAAU,EAAMC,QAAS,aAGzCK,KAAKE,SAAS,CAAEV,MAAO8B,EAAgB7B,MAAOO,KAAKT,MAAME,OAAS0B,EAAU1B,cAI7E,GAAkB,UAAdyB,EAAuB,CAC9B,IAAMO,EAAazB,KAAK0B,YAAY1B,KAAKT,MAAMC,OAC/C,GAAIQ,KAAKqB,gBAAgBrB,KAAKT,MAAMC,MAAOiC,EAAWjC,OAAQ,CAC5D,IAAMmC,EAAkB3B,KAAKC,UAAUwB,EAAWjC,OAE9CQ,KAAKuB,WAAWI,GAClB3B,KAAKE,SAAS,CAAEV,MAAOmC,EAAiBjC,UAAU,EAAMC,QAAS,eACxDK,KAAKwB,gBAAgBG,GAC9B3B,KAAKE,SAAS,CAAER,UAAU,EAAMC,QAAS,aAEzCK,KAAKE,SAAS,CAAEV,MAAOmC,EAAiBlC,MAAOO,KAAKT,MAAME,OAASgC,EAAWhC,cAI/E,GAAkB,OAAdyB,EAAoB,CAC3B,IAAMU,EAAU5B,KAAK6B,SAAS7B,KAAKT,MAAMC,OACzC,GAAIQ,KAAKqB,gBAAgBrB,KAAKT,MAAMC,MAAOoC,EAAQpC,OAAQ,CACzD,IAAMsC,EAAe9B,KAAKC,UAAU2B,EAAQpC,OAExCQ,KAAKuB,WAAWO,GAClB9B,KAAKE,SAAS,CAAEV,MAAOsC,EAAcpC,UAAU,EAAMC,QAAS,eACrDK,KAAKwB,gBAAgBM,GAC9B9B,KAAKE,SAAS,CAAER,UAAU,EAAMC,QAAS,aAEzCK,KAAKE,SAAS,CAAEV,MAAOsC,EAAcrC,MAAOO,KAAKT,MAAME,OAASmC,EAAQnC,cAIzE,GAAkB,SAAdyB,EAAsB,CAC7B,IAAMa,EAAY/B,KAAKgC,WAAWhC,KAAKT,MAAMC,OAC7C,GAAIQ,KAAKqB,gBAAgBrB,KAAKT,MAAMC,MAAOuC,EAAUvC,OAAQ,CAC3D,IAAMyC,EAAiBjC,KAAKC,UAAU8B,EAAUvC,OAE5CQ,KAAKuB,WAAWU,GAClBjC,KAAKE,SAAS,CAAEV,MAAOyC,EAAgBvC,UAAU,EAAMC,QAAS,eACvDK,KAAKwB,gBAAgBS,GAC9BjC,KAAKE,SAAS,CAAER,UAAU,EAAMC,QAAS,aAEzCK,KAAKE,SAAS,CAAEV,MAAOyC,EAAgBxC,MAAOO,KAAKT,MAAME,OAASsC,EAAUtC,cAKhFO,KAAKE,SAAS,CAAEP,QAAS,0B,iCAKpBuC,GAGT,IAFA,IAAI1C,EAAQ,GACRC,EAAQ,EACH0C,EAAI,EAAGA,EAAID,EAAWzB,OAAQ0B,IAAK,CAE1C,IADA,IAAItC,EAAM,GACDuC,EAAIF,EAAWC,GAAG1B,OAAS,EAAG2B,GAAK,EAAGA,IAAK,CAClD,IAAIC,EAAUH,EAAWC,GAAGC,GACf,IAAZC,EAAiBxC,EAAIE,KAAKsC,GAAWxC,EAAIyC,QAAQD,GAEpD7C,EAAMO,KAAKF,GAEb,IAAK,IAAIsC,EAAI,EAAGA,EAAI3C,EAAMiB,OAAQ0B,IAChC,IAAK,IAAIC,EAAI,EAAGA,EAAI5C,EAAMiB,OAAQ2B,IAC5B5C,EAAM2C,GAAGC,GAAK,GAAK5C,EAAM2C,GAAGC,KAAO5C,EAAM2C,GAAGC,EAAI,IAClD5C,EAAM2C,GAAGC,GAAmB,EAAd5C,EAAM2C,GAAGC,GACvB5C,EAAM2C,GAAGC,EAAI,GAAK,EAElB3C,GAASD,EAAM2C,GAAGC,IAEK,IAAhB5C,EAAM2C,GAAGC,IAAY5C,EAAM2C,GAAGC,EAAI,GAAK,IAC9C5C,EAAM2C,GAAGC,GAAK5C,EAAM2C,GAAGC,EAAI,GAC3B5C,EAAM2C,GAAGC,EAAI,GAAK,GAIxB,MAAO,CAAE5C,QAAOC,W,kCAGNyC,GAGV,IAFA,IAAI1C,EAAQ,GACRC,EAAQ,EACH0C,EAAI,EAAGA,EAAID,EAAWzB,OAAQ0B,IAAK,CAE1C,IADA,IAAItC,EAAM,GACDuC,EAAI,EAAGA,EAAIF,EAAWC,GAAG1B,OAAQ2B,IAAK,CAC7C,IAAIC,EAAUH,EAAWC,GAAGC,GACf,IAAZC,EAAiBxC,EAAIyC,QAAQD,GAAWxC,EAAIE,KAAKsC,GAEpD7C,EAAMO,KAAKF,GAEb,IAAK,IAAIsC,EAAI,EAAGA,EAAI3C,EAAMiB,OAAQ0B,IAChC,IAAK,IAAIC,EAAI5C,EAAM2C,GAAG1B,OAAS,EAAG2B,GAAK,EAAGA,IACpC5C,EAAM2C,GAAGC,GAAK,GAAK5C,EAAM2C,GAAGC,KAAO5C,EAAM2C,GAAGC,EAAI,IAClD5C,EAAM2C,GAAGC,GAAmB,EAAd5C,EAAM2C,GAAGC,GACvB5C,EAAM2C,GAAGC,EAAI,GAAK,EAElB3C,GAASD,EAAM2C,GAAGC,IAEK,IAAhB5C,EAAM2C,GAAGC,IAAY5C,EAAM2C,GAAGC,EAAI,GAAK,IAC9C5C,EAAM2C,GAAGC,GAAK5C,EAAM2C,GAAGC,EAAI,GAC3B5C,EAAM2C,GAAGC,EAAI,GAAK,GAIxB,MAAO,CAAE5C,QAAOC,W,+BAGTyC,GAIP,IAHA,IAAIK,EAAevC,KAAKwC,cAAcN,GAClC1C,EAAQ,GACRC,EAAQ,EACH0C,EAAI,EAAGA,EAAII,EAAa9B,OAAQ0B,IAAK,CAE5C,IADA,IAAItC,EAAM,GACDuC,EAAI,EAAGA,EAAIG,EAAaJ,GAAG1B,OAAQ2B,IAAK,CAC/C,IAAIC,EAAUE,EAAaJ,GAAGC,GACjB,IAAZC,EAAiBxC,EAAIyC,QAAQD,GAAWxC,EAAIE,KAAKsC,GAEpD7C,EAAMO,KAAKF,GAEb,IAAK,IAAIsC,EAAI,EAAGA,EAAI3C,EAAMiB,OAAQ0B,IAChC,IAAK,IAAIC,EAAI5C,EAAM2C,GAAG1B,OAAS,EAAG2B,GAAK,EAAGA,IACpC5C,EAAM2C,GAAGC,GAAK,GAAK5C,EAAM2C,GAAGC,KAAO5C,EAAM2C,GAAGC,EAAI,IAClD5C,EAAM2C,GAAGC,GAAmB,EAAd5C,EAAM2C,GAAGC,GACvB5C,EAAM2C,GAAGC,EAAI,GAAK,EAElB3C,GAASD,EAAM2C,GAAGC,IAEK,IAAhB5C,EAAM2C,GAAGC,IAAY5C,EAAM2C,GAAGC,EAAI,GAAK,IAC9C5C,EAAM2C,GAAGC,GAAK5C,EAAM2C,GAAGC,EAAI,GAC3B5C,EAAM2C,GAAGC,EAAI,GAAK,GAKxB,MAAO,CAAE5C,MADTA,EAAQQ,KAAKyC,aAAajD,GACVC,W,iCAGPyC,GAKT,IAJA,IAAIK,EAAevC,KAAKwC,cAAcN,GAClC1C,EAAQ,GACRC,EAAQ,EAEH0C,EAAI,EAAGA,EAAII,EAAa9B,OAAQ0B,IAAK,CAE5C,IADA,IAAItC,EAAM,GACDuC,EAAIG,EAAaJ,GAAG1B,OAAS,EAAG2B,GAAK,EAAGA,IAAK,CACpD,IAAIC,EAAUE,EAAaJ,GAAGC,GACjB,IAAZC,EAAiBxC,EAAIE,KAAKsC,GAAWxC,EAAIyC,QAAQD,GAEpD7C,EAAMO,KAAKF,GAGb,IAAK,IAAIsC,EAAI,EAAGA,EAAI3C,EAAMiB,OAAQ0B,IAChC,IAAK,IAAIC,EAAI,EAAGA,EAAI5C,EAAMiB,OAAQ2B,IAC5B5C,EAAM2C,GAAGC,GAAK,GAAK5C,EAAM2C,GAAGC,KAAO5C,EAAM2C,GAAGC,EAAI,IAClD5C,EAAM2C,GAAGC,GAAmB,EAAd5C,EAAM2C,GAAGC,GACvB5C,EAAM2C,GAAGC,EAAI,GAAK,EAElB3C,GAASD,EAAM2C,GAAGC,IAEK,IAAhB5C,EAAM2C,GAAGC,IAAY5C,EAAM2C,GAAGC,EAAI,GAAK,IAC9C5C,EAAM2C,GAAGC,GAAK5C,EAAM2C,GAAGC,EAAI,GAC3B5C,EAAM2C,GAAGC,EAAI,GAAK,GAKxB,MAAO,CAAE5C,MADTA,EAAQQ,KAAKyC,aAAajD,GACVC,W,mCAGLyC,GAGX,IAFA,IAAIQ,EAAS,GAEJN,EAAIF,EAAWzB,OAAS,EAAG2B,GAAK,EAAGA,IAAK,CAE/C,IADA,IAAIvC,EAAM,GACDsC,EAAID,EAAWzB,OAAS,EAAG0B,GAAK,EAAGA,IAC1CtC,EAAIyC,QAAQJ,EAAWC,GAAGC,IAE5BM,EAAO3C,KAAKF,GAEd,OAAO6C,I,oCAGKR,GAEZ,IADA,IAAIQ,EAAS,GACJN,EAAI,EAAGA,EAAIF,EAAWzB,OAAQ2B,IAAK,CAE1C,IADA,IAAIvC,EAAM,GACDsC,EAAID,EAAWzB,OAAS,EAAG0B,GAAK,EAAGA,IAC1CtC,EAAIE,KAAKmC,EAAWC,GAAGC,IAEzBM,EAAO3C,KAAKF,GAEd,OAAO6C,I,iCAGElD,GAOT,OANY,CACVQ,KAAKqB,gBAAgB7B,EAAOQ,KAAK6B,SAASrC,GAAOA,OACjDQ,KAAKqB,gBAAgB7B,EAAOQ,KAAK0B,YAAYlC,GAAOA,OACpDQ,KAAKqB,gBAAgB7B,EAAOQ,KAAKgC,WAAWxC,GAAOA,OACnDQ,KAAKqB,gBAAgB7B,EAAOQ,KAAKoB,WAAW5B,GAAOA,QAEvCmD,UAAS,K,2CAIvB3C,KAAK4C,cACQC,SAASC,cAAc,QAC/BC,iBAAiB,UAAW/C,KAAKgD,iBAAiBC,KAAKjD,S,uCAG7CkD,GACF,KAKTA,EAAEC,QACJnD,KAAKoD,OAAO,QALA,KAOLF,EAAEC,QACTnD,KAAKoD,OAAO,SAPH,KASFF,EAAEC,QACTnD,KAAKoD,OAAO,MATD,KAWJF,EAAEC,SACTnD,KAAKoD,OAAO,U,+BAIN,IAAD,OACP,OACE,6BACE,yBAAKC,UAAU,UAAf,wBACA,2BAAG,mFACH,yBAAKA,UAAU,SAASC,QAAS,WAAQ,EAAKV,gBAA9C,YAEA,yBAAKS,UAAU,WACb,yBAAKA,UAAU,SAASC,QAAS,WAAQ,EAAKF,OAAO,UAArD,QACA,yBAAKC,UAAU,SAASC,QAAS,WAAQ,EAAKF,OAAO,WAArD,SACA,yBAAKC,UAAU,SAASC,QAAS,WAAQ,EAAKF,OAAO,QAArD,MACA,yBAAKC,UAAU,SAASC,QAAS,WAAQ,EAAKF,OAAO,UAArD,SAIF,yBAAKC,UAAU,SAAf,UAA+BrD,KAAKT,MAAME,OAE1C,+BACGO,KAAKT,MAAMC,MAAM+D,KAAI,SAAC1D,EAAKD,GAAN,OAAa,kBAAC,EAAD,CAAK4D,IAAK5D,EAAGC,IAAKA,QAErD,wBAAIwD,UAAU,OAAd,IAAsBrD,KAAKT,MAAMI,c,GA1UzB8D,IAAMC,YAgVlBC,EAAM,SAAC,GAAa,IAAX9D,EAAU,EAAVA,IACb,OACE,4BACGA,EAAI0D,KAAI,SAACK,EAAMhE,GAAP,OAAc,kBAAC,EAAD,CAAM4D,IAAK5D,EAAGiE,UAAWD,SAKhDE,EAAO,SAAC,GAAmB,IAAjBD,EAAgB,EAAhBA,UACVE,EAAuB,IAAdF,EAAmB,GAAKA,EACrC,OACE,4BACE,yBAAKR,UAAU,QACb,yBAAKA,UAAU,UAAUU,MAMlB1E,IC1VK2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASzB,SAAS0B,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.f85a0369.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      board: null,\n      score: 0,\n      gameOver: false,\n      message: null,\n    };\n  }\n\n  createBoard() {\n    //let board = [[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]];\n    let board = [];\n    const n = 4; //n can be changed to any size we want\n    for (let i = 0; i < n; i++) {\n      const row = [];\n      for (let j = 0; j < n; j++) {\n        row.push(0);\n      }\n      board.push(row);\n    }\n    board = this.setRandom(this.setRandom(board));\n    this.setState({ board, score: 0, gameOver: false, message: null });\n  }\n\n  setRandom(board) {\n    const emptyGrids = this.getEmptyGrids(board);\n    const randomCoordinate = emptyGrids[Math.floor(Math.random() * emptyGrids.length)];\n    const randomNumber = this.getStartingNum();\n    board[randomCoordinate[0]][randomCoordinate[1]] = randomNumber;\n    return board;\n  }\n\n  getEmptyGrids(board) {\n    const emptyGrids = [];\n    for (let row = 0; row < board.length; row++) {\n      for (let col = 0; col < board[row].length; col++) {\n        if (board[row][col] === 0) { emptyGrids.push([row, col]) }\n      }\n    }\n    return emptyGrids;\n  }\n\n  getStartingNum() {\n    const startingNumbers = [2, 4];\n    const randomNumber = startingNumbers[Math.floor(Math.random() * startingNumbers.length)];\n    return randomNumber;\n  }\n\n  isChangeinBoard(previous, updated) {\n    return (JSON.stringify(updated) !== JSON.stringify(previous)) ? true : false;\n  }\n\n  checkForGameWon(board) {\n    for (let row = 0; row < board.length; row++) {\n      for (let col = 0; col < board[row].length; col++) {\n        if (board[row][col] === 2048) {\n          this.setState({ gameOver: true, message: 'You Won!' });\n        }\n      }\n    }\n  }\n\n  strike(direction) {\n    if (!this.state.gameOver) {\n      if (direction === 'left') {\n        const movedLeft = this.strikeLeft(this.state.board);\n        if (this.isChangeinBoard(this.state.board, movedLeft.board)) {\n          const leftWithRandom = this.setRandom(movedLeft.board);\n\n          if (this.isGameOver(leftWithRandom)) {\n            this.setState({ board: leftWithRandom, gameOver: true, message: 'Game over!' });\n          }\n          else if (this.checkForGameWon(leftWithRandom)) {\n            this.setState({ gameOver: true, message: 'You Won!' });\n          }\n          else {\n            this.setState({ board: leftWithRandom, score: this.state.score += movedLeft.score });\n          }\n        }\n      }\n      else if (direction === 'right') {\n        const movedRight = this.strikeRight(this.state.board);\n        if (this.isChangeinBoard(this.state.board, movedRight.board)) {\n          const rightWithRandom = this.setRandom(movedRight.board);\n\n          if (this.isGameOver(rightWithRandom)) {\n            this.setState({ board: rightWithRandom, gameOver: true, message: 'Game over!' });\n          } else if (this.checkForGameWon(rightWithRandom)) {\n            this.setState({ gameOver: true, message: 'You Won!' });\n          } else {\n            this.setState({ board: rightWithRandom, score: this.state.score += movedRight.score });\n          }\n        }\n      }\n      else if (direction === 'up') {\n        const movedUp = this.strikeUp(this.state.board);\n        if (this.isChangeinBoard(this.state.board, movedUp.board)) {\n          const upWithRandom = this.setRandom(movedUp.board);\n\n          if (this.isGameOver(upWithRandom)) {\n            this.setState({ board: upWithRandom, gameOver: true, message: 'Game over!' });\n          } else if (this.checkForGameWon(upWithRandom)) {\n            this.setState({ gameOver: true, message: 'You Won!' });\n          } else {\n            this.setState({ board: upWithRandom, score: this.state.score += movedUp.score });\n          }\n        }\n      }\n      else if (direction === 'down') {\n        const movedDown = this.strikeDown(this.state.board);\n        if (this.isChangeinBoard(this.state.board, movedDown.board)) {\n          const downWithRandom = this.setRandom(movedDown.board);\n\n          if (this.isGameOver(downWithRandom)) {\n            this.setState({ board: downWithRandom, gameOver: true, message: 'Game over!' });\n          } else if (this.checkForGameWon(downWithRandom)) {\n            this.setState({ gameOver: true, message: 'You Won!' });\n          } else {\n            this.setState({ board: downWithRandom, score: this.state.score += movedDown.score });\n          }\n        }\n      }\n      else {\n        this.setState({ message: 'Sorry :( Game Over.' });\n      }\n    }\n  }\n\n  strikeLeft(inputBoard) {\n    let board = [];\n    let score = 0;\n    for (let r = 0; r < inputBoard.length; r++) {\n      let row = [];\n      for (let c = inputBoard[r].length - 1; c >= 0; c--) {\n        let current = inputBoard[r][c];\n        (current === 0) ? row.push(current) : row.unshift(current);\n      }\n      board.push(row);\n    }\n    for (let r = 0; r < board.length; r++) {\n      for (let c = 0; c < board.length; c++) {\n        if (board[r][c] > 0 && board[r][c] === board[r][c + 1]) {\n          board[r][c] = board[r][c] * 2;\n          board[r][c + 1] = 0;\n          //add score\n          score += board[r][c];\n        }\n        else if (board[r][c] === 0 && board[r][c + 1] > 0) {\n          board[r][c] = board[r][c + 1];\n          board[r][c + 1] = 0;\n        }\n      }\n    }\n    return { board, score };\n  }\n\n  strikeRight(inputBoard) {\n    let board = [];\n    let score = 0;\n    for (let r = 0; r < inputBoard.length; r++) {\n      let row = [];\n      for (let c = 0; c < inputBoard[r].length; c++) {\n        let current = inputBoard[r][c];\n        (current === 0) ? row.unshift(current) : row.push(current);\n      }\n      board.push(row);\n    }\n    for (let r = 0; r < board.length; r++) {\n      for (let c = board[r].length - 1; c >= 0; c--) {\n        if (board[r][c] > 0 && board[r][c] === board[r][c - 1]) {\n          board[r][c] = board[r][c] * 2;\n          board[r][c - 1] = 0;\n          //add score\n          score += board[r][c];\n        }\n        else if (board[r][c] === 0 && board[r][c - 1] > 0) {\n          board[r][c] = board[r][c - 1];\n          board[r][c - 1] = 0;\n        }\n      }\n    }\n    return { board, score };\n  }\n\n  strikeUp(inputBoard) {\n    let rotatedRight = this.rotateToRight(inputBoard);\n    let board = [];\n    let score = 0;\n    for (let r = 0; r < rotatedRight.length; r++) {\n      let row = [];\n      for (let c = 0; c < rotatedRight[r].length; c++) {\n        let current = rotatedRight[r][c];\n        (current === 0) ? row.unshift(current) : row.push(current);\n      }\n      board.push(row);\n    }\n    for (let r = 0; r < board.length; r++) {\n      for (let c = board[r].length - 1; c >= 0; c--) {\n        if (board[r][c] > 0 && board[r][c] === board[r][c - 1]) {\n          board[r][c] = board[r][c] * 2;\n          board[r][c - 1] = 0;\n          //add score\n          score += board[r][c];\n        }\n        else if (board[r][c] === 0 && board[r][c - 1] > 0) {\n          board[r][c] = board[r][c - 1];\n          board[r][c - 1] = 0;\n        }\n      }\n    }\n    board = this.rotateToLeft(board);\n    return { board, score };\n  }\n\n  strikeDown(inputBoard) {\n    let rotatedRight = this.rotateToRight(inputBoard);\n    let board = [];\n    let score = 0;\n\n    for (let r = 0; r < rotatedRight.length; r++) {\n      let row = [];\n      for (let c = rotatedRight[r].length - 1; c >= 0; c--) {\n        let current = rotatedRight[r][c];\n        (current === 0) ? row.push(current) : row.unshift(current);\n      }\n      board.push(row);\n    }\n\n    for (let r = 0; r < board.length; r++) {\n      for (let c = 0; c < board.length; c++) {\n        if (board[r][c] > 0 && board[r][c] === board[r][c + 1]) {\n          board[r][c] = board[r][c] * 2;\n          board[r][c + 1] = 0;\n          //add score\n          score += board[r][c];\n        }\n        else if (board[r][c] === 0 && board[r][c + 1] > 0) {\n          board[r][c] = board[r][c + 1];\n          board[r][c + 1] = 0;\n        }\n      }\n    }\n    board = this.rotateToLeft(board);\n    return { board, score };\n  }\n\n  rotateToLeft(inputBoard) {\n    let result = [];\n\n    for (let c = inputBoard.length - 1; c >= 0; c--) {\n      let row = [];\n      for (let r = inputBoard.length - 1; r >= 0; r--) {\n        row.unshift(inputBoard[r][c]);\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  rotateToRight(inputBoard) {\n    let result = [];\n    for (let c = 0; c < inputBoard.length; c++) {\n      let row = [];\n      for (let r = inputBoard.length - 1; r >= 0; r--) {\n        row.push(inputBoard[r][c]);\n      }\n      result.push(row);\n    }\n    return result;\n  }\n\n  isGameOver(board) {\n    let moves = [\n      this.isChangeinBoard(board, this.strikeUp(board).board),\n      this.isChangeinBoard(board, this.strikeRight(board).board),\n      this.isChangeinBoard(board, this.strikeDown(board).board),\n      this.isChangeinBoard(board, this.strikeLeft(board).board)\n    ];\n    return (moves.includes(true)) ? false : true;\n  }\n\n  componentWillMount() {\n    this.createBoard();\n    const body = document.querySelector('body');\n    body.addEventListener('keydown', this.controlArrowKeys.bind(this));\n  }\n\n  controlArrowKeys(e) {\n    const left = 37;\n    const right = 39;\n    const up = 38;\n    const down = 40;\n\n    if (e.keyCode === left) {\n      this.strike('left');\n    }\n    else if (e.keyCode === right) {\n      this.strike('right');\n    }\n    else if (e.keyCode === up) {\n      this.strike('up');\n    }\n    else if (e.keyCode === down) {\n      this.strike('down');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"sticky\">2048 Game Assignment</div>\n        <p><b>Use the keyboard arrow keys or the buttons to play.</b></p>\n        <div className=\"button\" onClick={() => { this.createBoard() }}>New Game</div>\n\n        <div className=\"buttons\">\n          <div className=\"button\" onClick={() => { this.strike('left') }}>Left</div>\n          <div className=\"button\" onClick={() => { this.strike('right') }}>Right</div>\n          <div className=\"button\" onClick={() => { this.strike('up') }}>Up</div>\n          <div className=\"button\" onClick={() => { this.strike('down') }}>Down</div>\n\n        </div>\n\n        <div className=\"score\">Score: {this.state.score}</div>\n\n        <table>\n          {this.state.board.map((row, i) => (<Row key={i} row={row} />))}\n        </table>\n          <h1 className=\"msg\"> {this.state.message}</h1> \n      </div>\n    );\n  }\n};\n\nconst Row = ({ row }) => {\n  return (\n    <tr>\n      {row.map((cell, i) => (<Cell key={i} cellValue={cell} />))}\n    </tr>\n  );\n};\n\nconst Cell = ({ cellValue }) => {\n  let value = (cellValue === 0) ? '' : cellValue;\n  return (\n    <td>\n      <div className='cell'>\n        <div className=\"number\">{value}</div>\n      </div>\n    </td>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}